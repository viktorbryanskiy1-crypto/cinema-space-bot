from telethon import TelegramClient
from telethon.errors import SessionPasswordNeededError, FloodWaitError
import asyncio
import logging
import sys

# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
logging.basicConfig(level=logging.INFO)

# –í—Å—Ç–∞–≤—å —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –æ—Ç Telegram API
api_id = 20307782
api_hash = '8408f037ff82f1cf2270ae0d41823fe4'
phone_number = '+79832438267'

# –°–æ–∑–¥–∞—ë–º –∫–ª–∏–µ–Ω—Ç —Å –∏–º–µ–Ω–µ–º —Å–µ—Å—Å–∏–∏
client = TelegramClient('session_name', api_id, api_hash)

async def main():
    print("üìû –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Telegram...")
    
    try:
        # –ü–æ–ø—Ä–æ–±—É–µ–º –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è —Å —Ç–∞–π–º–∞—É—Ç–æ–º
        await asyncio.wait_for(client.connect(), timeout=30.0)
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
        
        # –ü—Ä–æ–≤–µ—Ä–∏–º, –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã –ª–∏ –º—ã
        is_authorized = await client.is_user_authorized()
        print(f"üîë –°—Ç–∞—Ç—É—Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {is_authorized}")
        
        if not is_authorized:
            print("üîë –ù–µ–æ–±—Ö–æ–¥–∏–º–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è")
            try:
                print("üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫–æ–¥–∞...")
                await client.send_code_request(phone_number)
                print("üìù –û–∂–∏–¥–∞–Ω–∏–µ –≤–≤–æ–¥–∞ –∫–æ–¥–∞...")
                code = input("Please enter the code you received: ")
                print(f"üî¢ –í–≤–µ–¥—ë–Ω –∫–æ–¥: {code}")
                
                # –ü—Ä–æ–±—É–µ–º –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è —Å –∫–æ–¥–æ–º
                try:
                    print("üîê –ü–æ–ø—ã—Ç–∫–∞ –≤—Ö–æ–¥–∞ —Å –∫–æ–¥–æ–º...")
                    await client.sign_in(phone_number, code)
                    print("‚úÖ –£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥ –ø–æ –∫–æ–¥—É")
                except SessionPasswordNeededError:
                    # –ï—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω–∞ –¥–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω–∞—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è
                    print("üîí –¢—Ä–µ–±—É–µ—Ç—Å—è –ø–∞—Ä–æ–ª—å (2FA)")
                    password = input("Please enter your password: ")
                    await client.sign_in(password=password)
                    print("‚úÖ –£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥ —Å –ø–∞—Ä–æ–ª–µ–º")
                    
            except FloodWaitError as e:
                print(f"‚è∞ –°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –ø–æ–ø—ã—Ç–æ–∫. –ü–æ–¥–æ–∂–¥–∏—Ç–µ {e.seconds} —Å–µ–∫—É–Ω–¥")
                return
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {e}")
                return
        else:
            print("‚úÖ –£–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã")
        
        print("üìã –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∫–∞–Ω–∞–ª–æ–≤...")
        try:
            count = 0
            async for dialog in client.iter_dialogs():
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –∫–∞–Ω–∞–ª—ã
                if dialog.is_channel:
                    username = getattr(dialog.entity, 'username', '–Ω–µ—Ç username')
                    print(f"- {dialog.name} (@{username}) | ID: {dialog.id}")
                    count += 1
                    if count >= 5:  # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª—è —Ç–µ—Å—Ç–∞
                        break
            print(f"üìä –ù–∞–π–¥–µ–Ω–æ –∫–∞–Ω–∞–ª–æ–≤: {count}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∏–∞–ª–æ–≥–æ–≤: {e}")

        print("üîö –†–∞–±–æ—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
        
    except asyncio.TimeoutError:
        print("‚ùå –¢–∞–π–º–∞—É—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ.")
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")

# –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –≤ –ø—Ä–æ–≥—Ä–∞–º–º—É
if __name__ == '__main__':
    print("üöÄ –ó–∞–ø—É—Å–∫ Telegram –∫–ª–∏–µ–Ω—Ç–∞...")
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print("\n‚ö†Ô∏è  –ü—Ä–æ–≥—Ä–∞–º–º–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ: {e}")
