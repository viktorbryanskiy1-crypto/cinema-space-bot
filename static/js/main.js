// –ü–ª–∞–≤–Ω—ã–µ –ø–µ—Ä–µ—Ö–æ–¥—ã –º–µ–∂–¥—É –≤–∫–ª–∞–¥–∫–∞–º–∏
document.addEventListener('DOMContentLoaded', function() {
    const tabBtns = document.querySelectorAll('.tab-btn');
    const contentArea = document.getElementById('content-area');
    
    // –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ–π –≤–∫–ª–∞–¥–∫–∏
    async function loadTabContent(tabName) {
        try {
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
            contentArea.innerHTML = `
                <div style="text-align: center; padding: 50px; color: var(--accent);">
                    <div>üåÄ –ó–∞–≥—Ä—É–∑–∫–∞ ${tabName}...</div>
                </div>
            `;
            
            // –ò–º–∏—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É (–≤ –±—É–¥—É—â–µ–º –∑–¥–µ—Å—å –±—É–¥–µ—Ç —Ä–µ–∞–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å)
            await new Promise(resolve => setTimeout(resolve, 1000));
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç –≤–∫–ª–∞–¥–∫–∏
            let content = '';
            switch(tabName) {
                case 'moments':
                    content = `
                        <div style="text-align: center; padding: 50px; color: var(--accent);">
                            <h2>üé¨ –ú–æ–º–µ–Ω—Ç—ã –∏–∑ –∫–∏–Ω–æ</h2>
                            <p>–ó–¥–µ—Å—å —Å–∫–æ—Ä–æ –ø–æ—è–≤—è—Ç—Å—è –ª—É—á—à–∏–µ –º–æ–º–µ–Ω—Ç—ã –∏–∑ —Ñ–∏–ª—å–º–æ–≤</p>
                        </div>
                    `;
                    break;
                case 'trailers':
                    content = `
                        <div style="text-align: center; padding: 50px; color: var(--accent);">
                            <h2>üé• –¢—Ä–µ–π–ª–µ—Ä—ã</h2>
                            <p>–ó–¥–µ—Å—å —Å–∫–æ—Ä–æ –ø–æ—è–≤—è—Ç—Å—è —Å–≤–µ–∂–∏–µ —Ç—Ä–µ–π–ª–µ—Ä—ã</p>
                        </div>
                    `;
                    break;
                case 'news':
                    content = `
                        <div style="text-align: center; padding: 50px; color: var(--accent);">
                            <h2>üì∞ –ù–æ–≤–æ—Å—Ç–∏</h2>
                            <p>–ó–¥–µ—Å—å —Å–∫–æ—Ä–æ –ø–æ—è–≤—è—Ç—Å—è –≥–æ—Ä—è—á–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ –∏–∑ –º–∏—Ä–∞ –∫–∏–Ω–æ</p>
                        </div>
                    `;
                    break;
                default:
                    content = `
                        <div style="text-align: center; padding: 50px; color: var(--accent);">
                            <h2>üåå –ö–∏–Ω–æ–í—Å–µ–ª–µ–Ω–Ω–∞—è</h2>
                            <p>–í—ã–±–µ—Ä–∏—Ç–µ –≤–∫–ª–∞–¥–∫—É –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞</p>
                        </div>
                    `;
            }
            
            contentArea.innerHTML = content;
            
        } catch (error) {
            contentArea.innerHTML = `
                <div style="text-align: center; padding: 50px; color: var(--warning);">
                    <h2>‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏</h2>
                    <p>–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.</p>
                </div>
            `;
        }
    }
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –≤–∫–ª–∞–¥–æ–∫
    tabBtns.forEach(btn => {
        btn.addEventListener('click', function() {
            tabBtns.forEach(b => b.classList.remove('active'));
            this.classList.add('active');
            loadTabContent(this.dataset.tab);
        });
    });
    
    // –ü–æ–∏—Å–∫
    document.getElementById('search-btn')?.addEventListener('click', function() {
        const query = document.getElementById('search-input').value.trim();
        if (query) {
            contentArea.innerHTML = `
                <div style="text-align: center; padding: 50px; color: var(--accent);">
                    <h2>üîç –ü–æ–∏—Å–∫ –ø–æ –∑–∞–ø—Ä–æ—Å—É: "${query}"</h2>
                    <p>–ó–¥–µ—Å—å —Å–∫–æ—Ä–æ –ø–æ—è–≤—è—Ç—Å—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞</p>
                </div>
            `;
        }
    });
    
    // Enter –≤ –ø–æ–∏—Å–∫–µ
    document.getElementById('search-input')?.addEventListener('keypress', function(e) {
        if (e.key === 'Enter') {
            document.getElementById('search-btn').click();
        }
    });
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ (–∑–∞–≥–ª—É—à–∫–∞)
function addNewItem(type) {
    alert(`–§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è ${type} –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ–∑–∂–µ!`);
}
